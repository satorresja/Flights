{"version":3,"file":"ng-datepicker.component.d.ts","sources":["ng-datepicker.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ISlimScrollOptions } from 'ngx-slimscroll';\nexport declare type AddClass = string | string[] | {\n    [k: string]: boolean;\n} | null;\nexport interface DatepickerOptions {\n    minYear?: number;\n    maxYear?: number;\n    displayFormat?: string;\n    barTitleFormat?: string;\n    dayNamesFormat?: string;\n    barTitleIfEmpty?: string;\n    firstCalendarDay?: number;\n    locale?: object;\n    minDate?: Date;\n    maxDate?: Date;\n    /** Placeholder for the input field */\n    placeholder?: string;\n    /** [ngClass] to add to the input field */\n    addClass?: AddClass;\n    /** [ngStyle] to add to the input field */\n    addStyle?: {\n        [k: string]: any;\n    } | null;\n    /** ID to assign to the input field */\n    fieldId?: string;\n    /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */\n    useEmptyBarTitle?: boolean;\n}\nexport declare class NgDatepickerComponent implements ControlValueAccessor, OnInit, OnChanges {\n    private elementRef;\n    options: DatepickerOptions;\n    /**\n     * Disable datepicker's input\n     */\n    headless: boolean;\n    /**\n     * Set datepicker's visibility state\n     */\n    isOpened: boolean;\n    /**\n     * Datepicker dropdown position\n     */\n    position: string;\n    private positions;\n    innerValue: Date;\n    displayValue: string;\n    displayFormat: string;\n    date: Date;\n    barTitle: string;\n    barTitleFormat: string;\n    barTitleIfEmpty: string;\n    minYear: number;\n    maxYear: number;\n    firstCalendarDay: number;\n    view: string;\n    years: {\n        year: number;\n        isThisYear: boolean;\n    }[];\n    dayNames: string[];\n    dayNamesFormat: string;\n    scrollOptions: ISlimScrollOptions;\n    days: {\n        date: Date;\n        day: number;\n        month: number;\n        year: number;\n        inThisMonth: boolean;\n        isToday: boolean;\n        isSelected: boolean;\n        isSelectable: boolean;\n    }[];\n    locale: object;\n    placeholder: string;\n    addClass: AddClass;\n    addStyle: {\n        [k: string]: any;\n    } | null;\n    fieldId: string;\n    useEmptyBarTitle: boolean;\n    disabled: boolean;\n    private onTouchedCallback;\n    private onChangeCallback;\n    setDisabledState(isDisabled: boolean): void;\n    value: Date;\n    constructor(elementRef: ElementRef);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    readonly defaultFieldId: string;\n    setOptions(): void;\n    nextMonth(): void;\n    prevMonth(): void;\n    setDate(i: number): void;\n    setYear(i: number): void;\n    /**\n     * Checks if specified date is in range of min and max dates\n     * @param date\n     */\n    private isDateSelectable(date);\n    init(): void;\n    initYears(): void;\n    initDayNames(): void;\n    toggleView(): void;\n    toggle(): void;\n    close(): void;\n    reset(fireValueChangeEvent?: boolean): void;\n    writeValue(val: Date): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    onBlur(e: MouseEvent): void;\n}\n"]}